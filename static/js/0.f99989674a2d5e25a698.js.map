{"version":3,"sources":["webpack:///src/components/music-list/music-list.vue","webpack:///./src/components/music-list/music-list.vue?3aa3","webpack:///./src/components/music-list/music-list.vue"],"names":["String","Array","Boolean","_this","this","image","fatherImage","timer","clientHeight","methods","extends_default","back","songs","index","y","scale","transform","newVal","zIndex","scroll","scroll_scroll","songList","song_list","loading","music_list_music_list","render","_vm","_h","$createElement","_c","_self","staticClass","ref","style","on","click","$event","_v","_s","title","directives","name","rawName","value","length","expression","playRan","attrs","id","data","probe-type","probeType","is-listen-scroll","isListenScroll","makeStyle","isRank","select","selectSong","staticRenderFns","Component","__webpack_require__","normalizeComponent","music_list","ssrContext","__webpack_exports__"],"mappings":"8KAsDAA,eAEA,gBAEAC,cAEA,gBAEAD,eAEA,iBAEAE,iBAGA,8GAWA,uBACA,sBAEA,IAAAC,EAAAC,oFAGAA,+DAGAC,gBAGAC,uEAGAC,IACA,yCAGAC,kDAEAA,yMAKAC,QAAAC,kCAGAC,4DAMAC,YAEAC,6CAIAD,iKAUAE,iBAKA,aAGA,2HAYA,OAGA,IACA,cACA,kDAGAC,EAAA,4BAMA,sCACA,iCACA,wCACA,8BACAC,UAAA,qDAIA,qCACA,qCACA,mCACA,qDACAC,EAAA,wCAKAC,gBAIAC,OAAAC,EAAA,EACAC,SAAAC,EAAA,EAEAC,UAAA,IC1LAC,GADiBC,OAFjB,WAA0B,IAAAC,EAAAtB,KAAauB,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,eAAyBF,EAAA,OAAYG,IAAA,SAAAD,YAAA,UAAAE,MAAAP,EAAA,UAAuDG,EAAA,OAAYE,YAAA,OAAAG,IAAuBC,MAAA,SAAAC,GAAyBV,EAAAf,WAAakB,EAAA,KAAUE,YAAA,gBAAwBL,EAAAW,GAAA,KAAAR,EAAA,MAAyBE,YAAA,UAAoBL,EAAAW,GAAAX,EAAAY,GAAAZ,EAAAa,UAAAb,EAAAW,GAAA,KAAAR,EAAA,OAAoDE,YAAA,iBAA2BF,EAAA,OAAYW,aAAaC,KAAA,OAAAC,QAAA,SAAAC,MAAAjB,EAAAd,MAAAgC,OAAA,EAAAC,WAAA,mBAAoFb,IAAA,UAAAD,YAAA,OAAAG,IAAuCC,MAAAT,EAAAoB,WAAqBjB,EAAA,KAAUE,YAAA,cAAwBL,EAAAW,GAAA,KAAAR,EAAA,QAAyBE,YAAA,SAAmBL,EAAAW,GAAA,gBAAAX,EAAAW,GAAA,KAAAR,EAAA,OAA+CE,YAAA,aAAqBL,EAAAW,GAAA,KAAAR,EAAA,OAA0BG,IAAA,QAAAD,YAAA,WAAAE,MAAAP,EAAA,aAA0DA,EAAAW,GAAA,KAAAR,EAAA,UAA2BG,IAAA,OAAAD,YAAA,OAAAgB,OAAqCC,GAAA,OAAAC,KAAAvB,EAAAd,MAAAsC,aAAAxB,EAAAyB,UAAAC,mBAAA1B,EAAA2B,gBAA8FnB,IAAKf,OAAAO,EAAA4B,aAAwBzB,EAAA,OAAYE,YAAA,sBAAgCF,EAAA,aAAkBkB,OAAOnC,MAAAc,EAAAd,MAAA2C,OAAA7B,EAAA6B,QAAsCrB,IAAKsB,OAAA9B,EAAA+B,eAAyB,GAAA/B,EAAAW,GAAA,KAAAR,EAAA,OAA4BW,aAAaC,KAAA,OAAAC,QAAA,SAAAC,OAAAjB,EAAAd,MAAAgC,OAAAC,WAAA,kBAAkFd,YAAA,oBAAgCF,EAAA,sBAE1wC6B,oBCCjB,IAcAC,EAdAC,EAAA,OAcAC,CACAC,EACAtC,GATA,EAVA,SAAAuC,GACAH,EAAA,SAaA,kBAEA,MAUAI,EAAA,EAAAL,EAAA","file":"static/js/0.f99989674a2d5e25a698.js","sourcesContent":["<template>\n  <div class=\"music-list\">\n    <!--背景墙-->\n    <div class=\"bg-wall\" ref=\"bgWall\" :style=\"bgStyle\">\n      <!--返回按钮-->\n      <div class=\"back\" @click=\"back()\">\n        <i class=\"icon-back\"></i>\n      </div>\n      <!--标题-->\n      <h1 class=\"title\">{{title}}</h1>\n      <!--“随机播放”按钮-->\n      <div class=\"play-wrapper\">\n        <div class=\"play\" ref=\"playBtn\" v-show=\"songs.length>0\" @click=\"playRan\">\n          <i class=\"icon-play\"></i>\n          <span class=\"text\">随机播放全部</span>\n        </div>\n      </div>\n      <!--高斯模糊-->\n      <div class=\"filter\"></div>\n    </div>\n    <!--列表背景块-->\n    <div class=\"bg-layer\" ref=\"layer\"  :style=\"layerStyle\">\n    </div>\n    <!--歌曲列表-->\n    <scroll class=\"main\"\n            id=\"main\"\n            ref=\"main\"\n            :data=\"songs\"\n            :probe-type=\"probeType\"\n            :is-listen-scroll=\"isListenScroll\"\n            @scroll=\"makeStyle\"\n    >\n      <div class=\"song-list-wrapper\">\n        <song-list :songs=\"songs\" :isRank=\"isRank\" @select=\"selectSong\"></song-list>\n      </div>\n      <div class=\"loading-wrapper\" v-show=\"!songs.length\">\n        <loading></loading>\n      </div>\n    </scroll>\n  </div>\n</template>\n\n<script>\n  import scroll from '../../base/scroll/scroll.vue'\n  import songList from '../../base/song-list/song-list.vue'\n  import loading from '../../base/loading/loading.vue'\n  import {mapActions} from 'vuex'\n  import {playListMixin} from '../../common/js/mixin'\n\n  export default {\n    mixins:[playListMixin],//把common/js/mixin.js中的代码插入进来，相同代码则覆盖掉\n    props: {\n      fatherImage: {\n        type: String,\n        default: ''\n      },\n      songs: {\n        type: Array,\n        default: ''\n      },\n      title: {\n        type: String,\n        default: ''\n      },\n      isRank: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        scrollY: 0,//滚动位置\n        bgStyle:'',//背景样式\n        layerStyle:''//\n      }\n    },\n    computed:{\n    },\n    created() {\n      this.probeType = 3;\n      this.isListenScroll = true;\n    },\n    mounted() {\n      this.bgStyle=`background-image:url(${this.fatherImage})` ;//背景墙的样式\n      if(this.isRank){\n        const me=this;\n        let timer=setTimeout(()=>{\n          if(this.songs.length){\n            this.bgUrl=this.songs[0].image;\n          }\n          else {\n            this.bgUrl=this.fatherImage\n          }\n          me.bgStyle=`background-image:url(${this.bgUrl})` ;//背景墙的样式\n          clearTimeout(timer);\n        },300);\n      }\n      this.height = {\n        wall:this.$refs.bgWall.clientHeight,\n        main:document.getElementById(\"main\").clientHeight\n      };\n      this.layerStyle=`height:${this.height.main+this.height.wall}px` ;//遮罩滑块的样式\n      this.$refs.main.$el.style.top = this.$refs.bgWall.clientHeight + \"px\";//list起始距离顶端的距离就是图片的高度\n      this.topTransalteY = -this.$refs.bgWall.clientHeight + 40;//layer最大滚动距离就是图片的高度\n    },\n    methods: {\n      //返回\n      back() {\n        this.$router.back()\n      },\n      //子组件songlisit派发slect事件，父组件musiclist执行selectSong，接收传入的song，index两个参数\n      //songlist是基础组件，跳转、播放等等业务逻辑在业务组件中实现。\n      selectSong(song, index) {\n        this.selectPlay({\n          list:this.songs,\n          index:index\n        })\n      },\n      //随机播放全部\n      playRan(){\n        this.randomPlay(this.songs);\n      },\n      //底部保留\n      handlePlayList(playList){\n        const bottom = playList.length > 0 ? '60px' : '';//底部存在mini播放器则设置bottom值\n        this.$refs.main.$el.style.bottom=bottom;//通过底部向上偏移，使得list的高度改变。《=scroll组件的高度是由样式中的top，bottom等计算而来\n        this.$refs.main.refresh();//scroll组件结构改变则重新计算和渲染\n      },\n      //监听滚动-获得滚动距离-使用watch侦听距离-设置样式\n      makeStyle(pos) {\n        this.scrollY = pos.y;\n      },\n\n      //actions的selectPlay映射为music-list的selectPlay.\n      ...mapActions([\n        'selectPlay',\n        'randomPlay'\n      ])\n    },\n    watch: {\n      scrollY(newVal) {\n        let zIndex;//bgWall层叠\n        /*\n        放大效果\n         */\n        let scale;//bgWall放大初始\n        let blur;//bgWall高斯初始值\n        const percent = Math.abs(newVal / this.$refs.bgWall.clientHeight);//根据高度比例得出需要增加的百分比\n        if (newVal > 0) {//从起始位置下拉时，newVal为正值\n          scale = 1 + percent;//bgImage放大之后\n          zIndex = 10;\n          blur = ''\n        } else {\n          scale = 1;\n          zIndex = 0;\n          blur = Math.min(20, percent * 20)\n        }\n        this.$refs.bgWall.style.transform = `scale(${scale})`;\n\n        /*\n        遮盖效果\n         */\n        //滑出顶部 滚动的距离大于距离顶部的距离\n        if (newVal < this.topTransalteY) {\n          zIndex = 10;\n          this.$refs.bgWall.style.paddingTop = 0;\n          this.$refs.bgWall.style.height = '40px';\n          this.$refs.playBtn.style.display = 'none';\n          this.$refs.layer.style.transform = `translate3d(0,0,0)`;\n        }\n        //没有滑出顶部\n        else if (newVal < 0 && newVal >= this.topTransalteY) {\n          zIndex = 0;\n          this.$refs.bgWall.style.paddingTop = '70%';\n          this.$refs.bgWall.style.height = 0;\n          this.$refs.playBtn.style.display = '';\n          this.$refs.layer.style.transform = `translate3d(0,${newVal}px,0)`;\n        }\n        /*\n        层叠设置\n         */\n        this.$refs.bgWall.style.zIndex = zIndex\n      }\n    },\n    components: {\n      scroll,\n      songList,\n      loading\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @import \"~common/stylus/variable\"\n  @import \"~common/stylus/mixin\"\n\n  .music-list\n    position: fixed\n    z-index: 100\n    top: 0\n    left: 0\n    bottom: 0\n    right: 0\n    background: $color-background\n    .bg-wall\n      position: relative\n      width: 100%\n      height: 0\n      padding-top: 70%\n      transform-origin: top\n      background-size: cover\n      background-position: center;\n      .back\n        position absolute\n        top: 0\n        left: 6px\n        z-index: 50\n        .icon-back\n          display: block\n          padding: 10px\n          font-size: $font-size-large-x\n          color: $color-theme\n      .title\n        position: absolute\n        top: 0\n        left: 10%\n        z-index: 40\n        width: 80%\n        no-wrap()\n        text-align: center\n        line-height: 40px\n        font-size: $font-size-large\n        color: $color-text\n      .play-wrapper\n        position: absolute\n        bottom: 20px\n        z-index: 50\n        width: 100%\n        .play\n          box-sizing: border-box\n          width: 135px\n          padding: 7px 0\n          margin: 0 auto\n          text-align: center\n          border: 1px solid $color-theme\n          color: $color-theme\n          border-radius: 100px\n          font-size: 0\n          .icon-play\n            display: inline-block\n            vertical-align: middle\n            margin-right: 6px\n            font-size: $font-size-medium-x\n          .text\n            display: inline-block\n            vertical-align: middle\n            font-size: $font-size-small\n      .filter\n        position: absolute\n        top: 0\n        left: 0\n        width: 100%\n        height: 100%\n        background: rgba(7, 17, 27, 0.4)\n    .bg-layer\n      position: relative\n      height: 100%\n      background: $color-music-bg\n      background-image url(\"../../common/image/bg.jpg\")\n    .main\n      position: fixed\n      top: 0\n      bottom: 0\n      width: 100%\n      .song-list-wrapper\n        padding: 20px 30px\n      .loading-wrapper\n        position: absolute\n        width: 100%\n        top: 50%\n        transform: translateY(-50%)\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/music-list/music-list.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"music-list\"},[_c('div',{ref:\"bgWall\",staticClass:\"bg-wall\",style:(_vm.bgStyle)},[_c('div',{staticClass:\"back\",on:{\"click\":function($event){_vm.back()}}},[_c('i',{staticClass:\"icon-back\"})]),_vm._v(\" \"),_c('h1',{staticClass:\"title\"},[_vm._v(_vm._s(_vm.title))]),_vm._v(\" \"),_c('div',{staticClass:\"play-wrapper\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.songs.length>0),expression:\"songs.length>0\"}],ref:\"playBtn\",staticClass:\"play\",on:{\"click\":_vm.playRan}},[_c('i',{staticClass:\"icon-play\"}),_vm._v(\" \"),_c('span',{staticClass:\"text\"},[_vm._v(\"随机播放全部\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"filter\"})]),_vm._v(\" \"),_c('div',{ref:\"layer\",staticClass:\"bg-layer\",style:(_vm.layerStyle)}),_vm._v(\" \"),_c('scroll',{ref:\"main\",staticClass:\"main\",attrs:{\"id\":\"main\",\"data\":_vm.songs,\"probe-type\":_vm.probeType,\"is-listen-scroll\":_vm.isListenScroll},on:{\"scroll\":_vm.makeStyle}},[_c('div',{staticClass:\"song-list-wrapper\"},[_c('song-list',{attrs:{\"songs\":_vm.songs,\"isRank\":_vm.isRank},on:{\"select\":_vm.selectSong}})],1),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.songs.length),expression:\"!songs.length\"}],staticClass:\"loading-wrapper\"},[_c('loading')],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c390e0e2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/music-list/music-list.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c390e0e2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./music-list.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./music-list.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./music-list.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c390e0e2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./music-list.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c390e0e2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/music-list/music-list.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}